Practical No â€“ 9
Aim : Write a program to implement : 

a)	Elgamal algorithm
Code:
from elgamal.elgamal import Elgamal

m=bytes(input("Enter plain text : "),'utf-8')
print(m)

pb, pv = Elgamal.newkeys(128)
print(pb)
print(pv)

ct = Elgamal.encrypt(m, pb)
print("Encrypt : ",ct)

dd = Elgamal.decrypt(ct, pv)
print("Decrypt : ",dd)
print()

Output: 
 



b)	Schnorr algorithm
Code:
from ecdsa import SigningKey, SECP256k1
from hashlib import sha256

prk = SigningKey.generate(curve=SECP256k1)
puk = prk.get_verifying_key()
msg = b"this msg is sign using schnorr algorithm"
msg_hash = sha256(msg).digest()
sign= prk.sign(msg_hash)
is_valid = puk.verify(sign, msg_hash)
print("msg:", msg)
print("Public Key:", puk.to_string("compressed").hex())
print("Signature:", sign.hex())
print("Signature is valid:", is_valid)

Output:
 
